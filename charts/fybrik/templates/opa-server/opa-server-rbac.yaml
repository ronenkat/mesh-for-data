{{- $autoFlag := and .Values.coordinator.enabled (eq .Values.coordinator.policyManager "opa") }}
{{- $opaConnectorEnabled := include "fybrik.isEnabled" (tuple .Values.opaConnector.enabled $autoFlag) }}
{{- if include "fybrik.isEnabled" (tuple .Values.opaServer.enabled $opaConnectorEnabled) }}
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opa-policy-editor
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: policy-editor
roleRef:
  kind: Role
  name: opa-policy-editor
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{ .Values.opaServer.serviceAccount.name | default "default" }}
  namespace: {{ .Release.Namespace }}
{{- end }}
