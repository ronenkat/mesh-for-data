// Copyright 2020 IBM Corp.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.7.1
// source: policy_manager_response.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnforcementAction_EnforcementActionLevel int32

const (
	EnforcementAction_UNKNOWN EnforcementAction_EnforcementActionLevel = 0
	EnforcementAction_DATASET EnforcementAction_EnforcementActionLevel = 1
	EnforcementAction_COLUMN  EnforcementAction_EnforcementActionLevel = 2
	EnforcementAction_ROW     EnforcementAction_EnforcementActionLevel = 3
	EnforcementAction_CELL    EnforcementAction_EnforcementActionLevel = 4
)

// Enum value maps for EnforcementAction_EnforcementActionLevel.
var (
	EnforcementAction_EnforcementActionLevel_name = map[int32]string{
		0: "UNKNOWN",
		1: "DATASET",
		2: "COLUMN",
		3: "ROW",
		4: "CELL",
	}
	EnforcementAction_EnforcementActionLevel_value = map[string]int32{
		"UNKNOWN": 0,
		"DATASET": 1,
		"COLUMN":  2,
		"ROW":     3,
		"CELL":    4,
	}
)

func (x EnforcementAction_EnforcementActionLevel) Enum() *EnforcementAction_EnforcementActionLevel {
	p := new(EnforcementAction_EnforcementActionLevel)
	*p = x
	return p
}

func (x EnforcementAction_EnforcementActionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnforcementAction_EnforcementActionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_policy_manager_response_proto_enumTypes[0].Descriptor()
}

func (EnforcementAction_EnforcementActionLevel) Type() protoreflect.EnumType {
	return &file_policy_manager_response_proto_enumTypes[0]
}

func (x EnforcementAction_EnforcementActionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnforcementAction_EnforcementActionLevel.Descriptor instead.
func (EnforcementAction_EnforcementActionLevel) EnumDescriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{0, 0}
}

type EnforcementAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id    string                                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Level EnforcementAction_EnforcementActionLevel `protobuf:"varint,3,opt,name=level,proto3,enum=connectors.EnforcementAction_EnforcementActionLevel" json:"level,omitempty"`
	Args  map[string]string                        `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EnforcementAction) Reset() {
	*x = EnforcementAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_manager_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnforcementAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnforcementAction) ProtoMessage() {}

func (x *EnforcementAction) ProtoReflect() protoreflect.Message {
	mi := &file_policy_manager_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnforcementAction.ProtoReflect.Descriptor instead.
func (*EnforcementAction) Descriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{0}
}

func (x *EnforcementAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnforcementAction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnforcementAction) GetLevel() EnforcementAction_EnforcementActionLevel {
	if x != nil {
		return x.Level
	}
	return EnforcementAction_UNKNOWN
}

func (x *EnforcementAction) GetArgs() map[string]string {
	if x != nil {
		return x.Args
	}
	return nil
}

type OperationDecision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation          *AccessOperation     `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	EnforcementActions []*EnforcementAction `protobuf:"bytes,2,rep,name=enforcement_actions,json=enforcementActions,proto3" json:"enforcement_actions,omitempty"`
	UsedPolicies       []*Policy            `protobuf:"bytes,3,rep,name=used_policies,json=usedPolicies,proto3" json:"used_policies,omitempty"`
}

func (x *OperationDecision) Reset() {
	*x = OperationDecision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_manager_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationDecision) ProtoMessage() {}

func (x *OperationDecision) ProtoReflect() protoreflect.Message {
	mi := &file_policy_manager_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationDecision.ProtoReflect.Descriptor instead.
func (*OperationDecision) Descriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{1}
}

func (x *OperationDecision) GetOperation() *AccessOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *OperationDecision) GetEnforcementActions() []*EnforcementAction {
	if x != nil {
		return x.EnforcementActions
	}
	return nil
}

func (x *OperationDecision) GetUsedPolicies() []*Policy {
	if x != nil {
		return x.UsedPolicies
	}
	return nil
}

type DatasetDecision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset   *DatasetIdentifier   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Decisions []*OperationDecision `protobuf:"bytes,2,rep,name=decisions,proto3" json:"decisions,omitempty"`
}

func (x *DatasetDecision) Reset() {
	*x = DatasetDecision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_manager_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetDecision) ProtoMessage() {}

func (x *DatasetDecision) ProtoReflect() protoreflect.Message {
	mi := &file_policy_manager_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetDecision.ProtoReflect.Descriptor instead.
func (*DatasetDecision) Descriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{2}
}

func (x *DatasetDecision) GetDataset() *DatasetIdentifier {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *DatasetDecision) GetDecisions() []*OperationDecision {
	if x != nil {
		return x.Decisions
	}
	return nil
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type        string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Hierarchy   []string `protobuf:"bytes,5,rep,name=hierarchy,proto3" json:"hierarchy,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_manager_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_policy_manager_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{3}
}

func (x *Policy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Policy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Policy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Policy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Policy) GetHierarchy() []string {
	if x != nil {
		return x.Hierarchy
	}
	return nil
}

type ComponentVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ComponentVersion) Reset() {
	*x = ComponentVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_manager_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentVersion) ProtoMessage() {}

func (x *ComponentVersion) ProtoReflect() protoreflect.Message {
	mi := &file_policy_manager_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentVersion.ProtoReflect.Descriptor instead.
func (*ComponentVersion) Descriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{4}
}

func (x *ComponentVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PoliciesDecisions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentVersions []*ComponentVersion  `protobuf:"bytes,1,rep,name=component_versions,json=componentVersions,proto3" json:"component_versions,omitempty"`
	DatasetDecisions  []*DatasetDecision   `protobuf:"bytes,2,rep,name=dataset_decisions,json=datasetDecisions,proto3" json:"dataset_decisions,omitempty"` //one per dataset
	GeneralDecisions  []*OperationDecision `protobuf:"bytes,3,rep,name=general_decisions,json=generalDecisions,proto3" json:"general_decisions,omitempty"`
}

func (x *PoliciesDecisions) Reset() {
	*x = PoliciesDecisions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_manager_response_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoliciesDecisions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoliciesDecisions) ProtoMessage() {}

func (x *PoliciesDecisions) ProtoReflect() protoreflect.Message {
	mi := &file_policy_manager_response_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoliciesDecisions.ProtoReflect.Descriptor instead.
func (*PoliciesDecisions) Descriptor() ([]byte, []int) {
	return file_policy_manager_response_proto_rawDescGZIP(), []int{5}
}

func (x *PoliciesDecisions) GetComponentVersions() []*ComponentVersion {
	if x != nil {
		return x.ComponentVersions
	}
	return nil
}

func (x *PoliciesDecisions) GetDatasetDecisions() []*DatasetDecision {
	if x != nil {
		return x.DatasetDecisions
	}
	return nil
}

func (x *PoliciesDecisions) GetGeneralDecisions() []*OperationDecision {
	if x != nil {
		return x.GeneralDecisions
	}
	return nil
}

var File_policy_manager_response_proto protoreflect.FileDescriptor

var file_policy_manager_response_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x1c, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x11, 0x45, 0x6e,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e,
	0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x3b, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09,
	0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51, 0x0a, 0x16, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4c,
	0x55, 0x4d, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x08,
	0x0a, 0x04, 0x43, 0x45, 0x4c, 0x4c, 0x10, 0x04, 0x22, 0xd7, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x13, 0x65, 0x6e, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x64, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12,
	0x3b, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x22,
	0x50, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a,
	0x0a, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x4d, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x61, 0x74, 0x6d, 0x65, 0x73, 0x68, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x66, 0x6f, 0x72, 0x2d, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x66, 0x6f, 0x72, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_policy_manager_response_proto_rawDescOnce sync.Once
	file_policy_manager_response_proto_rawDescData = file_policy_manager_response_proto_rawDesc
)

func file_policy_manager_response_proto_rawDescGZIP() []byte {
	file_policy_manager_response_proto_rawDescOnce.Do(func() {
		file_policy_manager_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_policy_manager_response_proto_rawDescData)
	})
	return file_policy_manager_response_proto_rawDescData
}

var file_policy_manager_response_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_policy_manager_response_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_policy_manager_response_proto_goTypes = []interface{}{
	(EnforcementAction_EnforcementActionLevel)(0), // 0: connectors.EnforcementAction.EnforcementActionLevel
	(*EnforcementAction)(nil),                     // 1: connectors.EnforcementAction
	(*OperationDecision)(nil),                     // 2: connectors.OperationDecision
	(*DatasetDecision)(nil),                       // 3: connectors.DatasetDecision
	(*Policy)(nil),                                // 4: connectors.Policy
	(*ComponentVersion)(nil),                      // 5: connectors.ComponentVersion
	(*PoliciesDecisions)(nil),                     // 6: connectors.PoliciesDecisions
	nil,                                           // 7: connectors.EnforcementAction.ArgsEntry
	(*AccessOperation)(nil),                       // 8: connectors.AccessOperation
	(*DatasetIdentifier)(nil),                     // 9: connectors.DatasetIdentifier
}
var file_policy_manager_response_proto_depIdxs = []int32{
	0,  // 0: connectors.EnforcementAction.level:type_name -> connectors.EnforcementAction.EnforcementActionLevel
	7,  // 1: connectors.EnforcementAction.args:type_name -> connectors.EnforcementAction.ArgsEntry
	8,  // 2: connectors.OperationDecision.operation:type_name -> connectors.AccessOperation
	1,  // 3: connectors.OperationDecision.enforcement_actions:type_name -> connectors.EnforcementAction
	4,  // 4: connectors.OperationDecision.used_policies:type_name -> connectors.Policy
	9,  // 5: connectors.DatasetDecision.dataset:type_name -> connectors.DatasetIdentifier
	2,  // 6: connectors.DatasetDecision.decisions:type_name -> connectors.OperationDecision
	5,  // 7: connectors.PoliciesDecisions.component_versions:type_name -> connectors.ComponentVersion
	3,  // 8: connectors.PoliciesDecisions.dataset_decisions:type_name -> connectors.DatasetDecision
	2,  // 9: connectors.PoliciesDecisions.general_decisions:type_name -> connectors.OperationDecision
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_policy_manager_response_proto_init() }
func file_policy_manager_response_proto_init() {
	if File_policy_manager_response_proto != nil {
		return
	}
	file_policy_manager_request_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_policy_manager_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnforcementAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_manager_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationDecision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_manager_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetDecision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_manager_response_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_manager_response_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_manager_response_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoliciesDecisions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_policy_manager_response_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_policy_manager_response_proto_goTypes,
		DependencyIndexes: file_policy_manager_response_proto_depIdxs,
		EnumInfos:         file_policy_manager_response_proto_enumTypes,
		MessageInfos:      file_policy_manager_response_proto_msgTypes,
	}.Build()
	File_policy_manager_response_proto = out.File
	file_policy_manager_response_proto_rawDesc = nil
	file_policy_manager_response_proto_goTypes = nil
	file_policy_manager_response_proto_depIdxs = nil
}
