/*
 * Policy Manager Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package base

import (
	"encoding/json"
)

// ResourceColumns struct for ResourceColumns
type ResourceColumns struct {
	Name string                  `json:"name"`
	Tags *map[string]interface{} `json:"tags,omitempty"`
}

// NewResourceColumns instantiates a new ResourceColumns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceColumns(name string) *ResourceColumns {
	this := ResourceColumns{}
	this.Name = name
	return &this
}

// NewResourceColumnsWithDefaults instantiates a new ResourceColumns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceColumnsWithDefaults() *ResourceColumns {
	this := ResourceColumns{}
	return &this
}

// GetName returns the Name field value
func (o *ResourceColumns) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceColumns) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceColumns) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ResourceColumns) GetTags() map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceColumns) GetTagsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ResourceColumns) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]interface{} and assigns it to the Tags field.
func (o *ResourceColumns) SetTags(v map[string]interface{}) {
	o.Tags = &v
}

func (o ResourceColumns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableResourceColumns struct {
	value *ResourceColumns
	isSet bool
}

func (v NullableResourceColumns) Get() *ResourceColumns {
	return v.value
}

func (v *NullableResourceColumns) Set(val *ResourceColumns) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceColumns) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceColumns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceColumns(val *ResourceColumns) *NullableResourceColumns {
	return &NullableResourceColumns{value: val, isSet: true}
}

func (v NullableResourceColumns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceColumns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
