/*
 * Policy Manager Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package base

import (
	"encoding/json"
)

// ResultItem struct for ResultItem
type ResultItem struct {
	// The policy on which the decision was based.
	Policy string `json:"policy"`
	Action Action `json:"action"`
}

// NewResultItem instantiates a new ResultItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultItem(policy string, action Action) *ResultItem {
	this := ResultItem{}
	this.Policy = policy
	this.Action = action
	return &this
}

// NewResultItemWithDefaults instantiates a new ResultItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultItemWithDefaults() *ResultItem {
	this := ResultItem{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *ResultItem) GetPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *ResultItem) GetPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *ResultItem) SetPolicy(v string) {
	o.Policy = v
}

// GetAction returns the Action field value
func (o *ResultItem) GetAction() Action {
	if o == nil {
		var ret Action
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ResultItem) GetActionOk() (*Action, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ResultItem) SetAction(v Action) {
	o.Action = v
}

func (o ResultItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["policy"] = o.Policy
	}
	if true {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableResultItem struct {
	value *ResultItem
	isSet bool
}

func (v NullableResultItem) Get() *ResultItem {
	return v.value
}

func (v *NullableResultItem) Set(val *ResultItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResultItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResultItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultItem(val *ResultItem) *NullableResultItem {
	return &NullableResultItem{value: val, isSet: true}
}

func (v NullableResultItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
